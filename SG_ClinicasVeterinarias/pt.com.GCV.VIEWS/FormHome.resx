<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="menuToolStripMenuItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAlgAAAJYCAYAAAC+ZpjcAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAFSFJREFUeF7t3Xvwt/Wcx/HuQ4dbh10lkY5KBxXllGoVcti0DovkkBJrRaJNOdQs
        phxGa7HYFWYtVharxThORRpUFkNR6XZIJ2diOupw29dnxs405k11d32/3+vweM48/n5/ruv3x3XN9b1+
        n2sNSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSepdS2Kj2DZ2jYfEfvGkeDIAsHDtmtyuze0avVu0a/Zdol3D
        1YPWjUfHy+I/4uz4dfweABicK+OceG+8ItpN2PqhGbc8HhonxJfjxqj+QADAOLRr/VnxmnhYtHsBddR9
        4o3xk6hOPgAwDT+NN0V7DchPiqvROvG8+FZUJxgAmLbz4gWxInQrrRdHxY+jOpkAALfUnmodE97XKlor
        Xhq/iurkAQD8Oe0f3V4e7Z5CaZ84P6qTBQBwe1wYD4/J1va8aP+KWZ0cAIA74gOxSUyqtt2C96wAgFlq
        72ftG6NvWbwqbo7qRAAAdGlVHB+j3UOrfcLmC1EdPADALH0xNo5RtUW0l86qAwYAmIeLYssYRfeOy6I6
        UACAeboidopB98CwtxUA0Cftw9IPjkG2Y7i5AgD6qG1MOrgnWZvFpVEdEABAH1weg3kna8OwMzsAMATt
        xffe/3fh0jg1qgMAAOijtoVDr/fJOi6qhQMA9FnbjLSXtY8226EdABiituP7I6NXtQ83+7YgADBkP4+7
        RW96T1QLBQAYkpOjF+0V1QIBAIbo4bHQ2hv350a1OACAIWrfT14rFtaLoloYAMCQvTQW0or4WVSLAgAY
        sva5v/Vi7h0R1YIAAMbgqJhr7XfJy6JaDADAGLQtqNaJufV3US0EAGBMDou59bWoFgEAMCbfjLm0Q1QL
        AAAYo11i5r02quEAAGN0Ysy0pXFJVMMBAMaovey+LGbW7lENBgAYs71jZh0b1VAAgDF7dcys06MaCgAw
        ZmfGTGobbV0X1VAAgDG7Ie4UnfewqAYCAEzBI6LzjoxqGADAFBwdnfeOqIYBAEzBu6PzvhDVMACAKfhS
        dN4VUQ0DAJiCX0Sntbfmq0EAAFPyl9FZm0Y1BABgSraKzto+qiEAAFOyc3TWA6IaAgAwJQ+OzrLJKADA
        Gms8Mjprv6iGAABMyWOjs/aJaggAwJQ8PDrrflENAQCYkgdFZ20b1RAAgCm5d3TWJlENAQCYks2js9aO
        VVENAgCYivWi034Y1SAAgCm4PDrvs1ENAwCYgtOj894S1TAAgCl4e3TeC6IaBgAwBUdE57V9H6phAABT
        sGd03vL4TVQDAQDG7KpYM2bSJ6IaCgAwZp+JmfWiqIYCAIzZ0TGz2vbw1VAAgDHbLWbaeVENBgAYo+/G
        kphpx0Q1HABgjI6NmXeP8F1CAGAqtoi5dFpUCwAAGJMzYm49PqpFAACMyZNibi0NL7sDAGN2QbR7nrl2
        YFSLAQAYg2fG3FsWF0W1IACAIbs42mcCF9IBUS0KAGDIFvL06v9rm26dGtXCAACG6MyY+cait9Z28buo
        FggAMCQ3xk7Ri06IapEAAEPyT9GbVsS5US0UAGAI2rYM60av2j6ujmrBAAB9dm3sHL3sGVEtGgCgzw6N
        XveuqBYOANBH74uF/9fgrbVWfC6qAwAA6JPPx9oxiNaL/43qQAAA+uAbsUEMqo3Dp3QAgD76Xtw1Btnm
        cWFUBwYAsAjtAdCWMeg2inOiOkAAgHn6atwlRlHbtOszUR0oAMA8tH/Ca++Jj6o141+iOmAAgFl6e7Sd
        Dkbb38aVUR08AECXfhtPjkm0VbTfQKsTAQDQha/HNjGp2k+GLwnfLwQAunRNvCxG/ZPgrbVZ/HdUJwgA
        4PY4JbYI/aFHhe0cAIDV0b4g89ehovahxX3jjKhOHgDALZ0Z7SFN7z/W3Jf2jPdH+x21OqEAwDRdGyfH
        3qHVbP04JNrXrldFdaIBgPH7Qhwag/tAc99rH2V8SrwjfEgaAMZtZZwUB8YmoTl1j3hM/EO0m652Z3tZ
        2PoBAIahXbMvj/b+9TvjqNg/2i4D6mHLoj1CbDdh28cOAMDCtWtyu3n6i2jXakmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSpG7bMB4ch8QJ8a/x/vhYnB5nxzkAwMK1a/Ln4+Pxn9Gu2a+J
        Z8WesVFoAS2PdjN1bJwWv4jfAwCj8ctoN2HHxR6xZmgGrRcHx6fiqqj+GADAOLVr/6ejPeVaP3QHWhb7
        Rvup75qoTjgAMC3XxgfiUdHuFXQba48B2x3qd6M6sQAAzffi2bFW6E+0Tjw/fhTVSQQAqFwah8eK0C36
        m7g4qpMGAHBbtIc0j4vJt2W0rRSqkwQAsDo+GVvH5FoSR4SX1wGAWbgujop2zzGJ7hyeWgEA89CeZo1+
        89Ldw0vsAMA8tZfg24alo+yguDGqAwcAmKV2D9I+qTeq2m+g1cECAMzTMTH42otlJ0Z1gAAAi/DGWBqD
        rN1ctS9kVwcGALBI74xB/ofhK6M6IACAPjghBtVhUR0IAECftH05B9HjY1VUBwEA0DcHRK+7Z/w2qsUD
        APTRVbF99LK14+tRLRwAoM/OjRXRu94a1YIBAIag/Wdhr9ovqoUCAAzJE6IXtcdpP4hqkQAAQ9K+W7hu
        LLxXR7VAAIAhen0stG3j+qgWBwAwRO3D0DvGwjolqoUBAAzZp2Ih7RTVggAAxmDXmHsnR7UYAIAx+EjM
        tfbu1c1RLQYAYAzap//musP7v0W1EACAMXlXzKV14sqoFgEAMCbtG8tz+YTOE6NaAADAGB0YM+9jUQ0H
        ABijT8dM2zBuiGo4AMAY3RSbxMw6IKrBAABjdlDMrJOiGgoAMGb/HjNrZVRDAQDG7OKYSZtHNRAAYAq2
        js57WlTDAACm4JnRecdHNQwAYApeF5334aiGAQBMwSnRed+KahgAwBScH522NK6JahgAwBS0zdaXR2e1
        HdyrQQAAU3L36KytohoCADAl94rO2iWqIQAAU7JbdNaeUQ0BAJiSvaOzHh3VEACAKdk/OutRUQ0BAJiS
        /aKz9ohqCADAlDwkOmvnqIYAAEzJrtFZW0Y1BABgSraNzrpzVEMAAKbkbtFZS+KqqAYBAEzB9bEsOu0b
        UQ0DAJiC86LzPhjVMACAKfhIdN6rohoGADAFx0fnHRDVMACAKXhadF57a74aBgAwBZvFTDo/qoEAAGO2
        MmbW26IaCgAwZifFzHpCVEMBAMbswJhZG8R1UQ0GABijG2LDmGkfimo4AMAYnRIzb/+ohgMAjFF7RWrm
        rRk/j2oBAABj8qtYK+bSm6JaBADAmLw15tbm0V74qhYCADAGN8VWMdfeHdViAADG4L0x97aJm6NaEADA
        kK2KHWIhvT+qRQEADNlHYmG1jx5eHdXCAACG6NrYOhba0VEtDgBgiI6Lhdf2xfpOVAsEABiSi2Lt6EUP
        ifYyWLVQAICheET0qhOiWigAwBCcGL1reXwxqgUDAPTZWdFee+plm4bvFAIAQ9K+N7hF9LqHhc/oAABD
        cGM8OgbRU8JL7wBA3x0Ug+qIqA4EAKAPjoxBdnxUBwQAsEivjUF3TFQHBgCwCC+PJTH4DombojpIAIB5
        aPcih8ao2j+uieqAAQBmqX3A+bExynaMb0d14AAAs3B+7BSjbkW8K6oTAADQpffEujGZnha/jOpkAADc
        Eb+Og2OSbRSeZgEAXWpPrTaOybdHfDOqkwQAcFucG3uFbtGyeHK40QIAbo92Y9U+09fuJfQnaht/PSbO
        iuokAgA0X4229cIoNg2dZ/eNf46fRnViAYBp+Vm8OXYLN1Z3sOWxX7w3Lo3qhAMA43RZvC/aL1xrhmZQ
        u1vdJp4bH4wL4oao/iAAwLC0a/qF8aH4+9g2PKlaUO0JV7vpane2L45XR/tpsW0B8V/xyfgUALBw7Zrc
        bp7eHW+Kds0+Mton9e4V7ZouSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZLUTUti
        Rdw1toldY6/4KwBg4do1ebfYNjaJds1u1271pKVx3zgkXhcfjW/HdfF7AGAwro/vxP/E6+NZ0W7C2rVe
        M67d3e4Qh0e7mfplVH8kAGAcfhWnxAtjx/Ckq8M2jaPjvKhOPgAwDe2XqpfGPUKrUXsk+Lj4XNwc1UkG
        AKZpVZwaTww/I96GlsVTo92hVicUAOCWzo9nxPLQH9V+U316rIzq5AEA/Dnfj4PCe1p/qL20dkZUJwsA
        4PY4M3aOybZutH/FvDGqEwQAsDpuijfGejGpdokLozopAABdaK8etQ3HR1/7XfS5YTNQAGAe2iamh8Vo
        3826U5wc1cEDAMzSh6K9njSqNoyvRHXAAADzcHZsFKNos2h7VFQHCgAwT+0d8C1i0G0fl0Z1gAAAi3B5
        tG2iBtnmcVlUBwYAsEhXxJYxqNo7VxdEdUAAAH1wUWwcg6j9t+BZUR0IAECffC3Wj17X9pj4cFQHAADQ
        Rx+PXu+T9fyoFg4A0GdHRi/bLX4X1aIBAPrshnhQ9KoN4vtRLRgAYAh+FHeO3vSWqBYKADAk74hedN+4
        OapFAgAMyap4YCy0peEbgwDAmHw9lsXCOjSqhQEADNlhsZDWjEuiWhQAwJC1T+msHXPP0ysAYMyeF3Ot
        /S65MqrFAACMwQ9jecytp0a1EACAMTko5taXoloEAMCYnBVzaeuoFgAAMEb3ipn3j1ENBwAYo+Njpi2J
        i6IaDgAwRhdH21x9Zu0a1WAAgDHbPWbW0VENBQAYs2NjZn0mqqEAAGN2Wsyk9mmcq6MaCgAwZtfFTD6d
        s2dUAwEApmDv6LwjohoGADAFR0bnvS2qYQAAU3BSdN6pUQ0DAJiCM6LzLolqGADAFPwkOm2dqAYBAEzJ
        BtFZd4tqCADAlGwRndW+Il0NAQCYkp2is+4f1RAAgCnp9JuED41qCADAlOwbnbVfVEMAAKbksdFZnmAB
        AKyxxiOis7yDBQDQ8TtY20U1BABgSjr9L8K7RzUEAGBKtozOspM7AEDHO7m3Lo1qEADAFPw0Ou+0qIYB
        AEzBF6Pz3h7VMACAKTgpOu+IqIYBAEzBkdF5e0U1DABgCvaJzlsrro5qIADAmF0Xa8dM+mxUQwEAxuz0
        mFnHRDUUAGDMjouZtVtUQwEAxmyPmFlLYmVUgwEAxuhHsTRm2iujGg4AMEYnxMy7Z1TDAQDGaLuYS1+O
        agEAAGNydsytp0e1CACAMTk45tby+H5UCwEAGIOLY82Ya8+JajEAAGPw/Jh77dM5l0a1IACAIftxrBML
        yVMsAGCMDo+F1Tbdam/XVwsDABiib8SyWGjt8zk3R7VAAIAhWRW7Ry96a1SLBAAYkndGb9ogfhDVQgEA
        huCS2DB61f3jd1EtGACgz26MPaKXvTCqRQMA9NlLorctiY9GtXAAgD76ZLR7mF63bnw1qgMAAOiTtiXD
        +jGI7hLfjepAAAD64Htx1xhUW8blUR0QAMAi/SS2jkG2Y7jJAgD65IrYKQbdFnFhVAcIADBP7RWm9ivb
        KNoozonqQAEA5qH9E157T3xUtf8u/HBUBwwAMEttG6n1YpS1PSYOi+ujOngAgC61r8wcHr3f56qLdo2V
        UZ0IAIAutO8k3y8mVXtMd2K0b/9UJwUAYHXcFG+ODWKy7RxfiuoEAQDcHl+J+4RS+1304GiP8qqTBQDw
        5/wwnhVLQ3/U8nhGnB/VyQMAuKW21+Yzo91D6FZqd59PjNNiVVQnFACYpnZv8Pk4IJaFVqPN4mVxQVQn
        GQCYhva06hXRvhKjjmrvabUX4l8UH4srozr5AMA4/CY+ES+OXWISe1ktuvZIsO1t8ex4Q7SbrvaU64ao
        /kgAQD+1a3d7OtVuptoWTs+JB4Sf/3pUe3+r7bF199gu7h/7xEMBgIVr1+R287R9bBrtmu0//yRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiT1rjXW+D/aqV41d09VUQAAAABJRU5ErkJggg==
</value>
  </data>
</root>